{"ast":null,"code":"var _jsxFileName = \"/media/prathamesh/Pratham/Blog-App/frontend/src/screens/CreatePostScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { createPost } from '../redux/actions/post';\nimport ReactLoading from 'react-loading';\nimport Toast from '../components/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePostScreen = ({\n  history\n}) => {\n  _s();\n\n  const {\n    addToast\n  } = useToasts();\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState();\n  const dispatch = useDispatch();\n  const postCreate = useSelector(state => state.postCreate);\n  const {\n    error,\n    loading,\n    success\n  } = postCreate;\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!name || !title || !content) {\n      setMessage('All fields are required');\n    } else {\n      // Dispatch Register\n      dispatch(createPost(title, name, content));\n      history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center text-warning my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-pencil-alt text-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), \" New Post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Toast, {\n        variant: \"success\",\n        children: [\" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), \"}\", /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"enter title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            style: {\n              borderLeft: '5px solid green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: {\n              borderLeft: '5px solid green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"enter content\",\n            as: \"textarea\",\n            rows: 5,\n            value: content,\n            onChange: e => setContent(e.target.value),\n            style: {\n              borderLeft: '5px solid green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"btn btn-block btn-success py-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \" Create Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatePostScreen, \"GjuRWUrF1R8dF6eoYYvqbDfSfzk=\", true, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreatePostScreen;\nexport default CreatePostScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostScreen\");","map":{"version":3,"sources":["/media/prathamesh/Pratham/Blog-App/frontend/src/screens/CreatePostScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","FormContainer","createPost","ReactLoading","Toast","CreatePostScreen","history","addToast","useToasts","name","setName","title","setTitle","content","setContent","message","setMessage","dispatch","postCreate","state","error","loading","success","submitHandler","e","preventDefault","push","target","value","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { createPost } from '../redux/actions/post';\nimport ReactLoading from 'react-loading';\nimport Toast from '../components/Toast';\n\nconst CreatePostScreen = ({ history }) => {\n  const { addToast } = useToasts();\n\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const postCreate = useSelector((state) => state.postCreate);\n  const { error, loading, success } = postCreate;\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!name || !title || !content) {\n      setMessage('All fields are required');\n    } else {\n      // Dispatch Register\n      dispatch(createPost(title, name, content));\n      history.push('/');\n    }\n  };\n\n  return (\n    <>\n      <FormContainer>\n        {/* {success &&\n          addToast('Post Saved Successfully', { appearance: 'success' })}\n\n        {error && addToast('Failed to add post', { appearance: 'error' })} */}\n        {/* {message && addToast(message, { appearance: 'error' })} */}\n        <h2 className='text-center text-warning my-2'>\n          <i className='fas fa-pencil-alt text-success'></i> New Post\n        </h2>\n        {message && <Toast variant='success'> {message}</Toast>}}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='title'>\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='enter title'\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='name'>\n            <Form.Label>Name </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='enter your name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='content'>\n            <Form.Label>Content </Form.Label>\n            <Form.Control\n              placeholder='enter content'\n              as='textarea'\n              rows={5}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' className='btn btn-block btn-success py-2'>\n            <i class='fas fa-thumbs-up'></i> Create Post\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default CreatePostScreen;\n"]},"metadata":{},"sourceType":"module"}