{"ast":null,"code":"import _slicedToArray from\"/media/prathamesh/Pratham/Blog-App/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import{createPost}from'../redux/actions/post';import Message from'../components/Message';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CreatePostScreen=function CreatePostScreen(_ref){var history=_ref.history;// LOCAL STATES FOR INPUT\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),content=_useState6[0],setContent=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];// DISPATCH\nvar dispatch=useDispatch();// CREATE POST REDUCER\nvar postCreate=useSelector(function(state){return state.postCreate;});var error=postCreate.error;// SUBMIT HANDLER\nvar submitHandler=function submitHandler(e){e.preventDefault();if(!name||!title||!content){setMessage('All fields are required');}else{// DISPATCH CREATE POST\ndispatch(createPost(title,name,content));// REDIRECT TO HOMEPAGE\nhistory.push('/');}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(FormContainer,{children:[message&&/*#__PURE__*/_jsxs(Message,{variant:\"warning\",children:[\" \",message]}),error&&/*#__PURE__*/_jsxs(Message,{variant:\"danger\",children:[\" \",error]}),/*#__PURE__*/_jsxs(\"h2\",{className:\"text-center text-warning my-2\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-pencil-alt text-success\"}),\" New Post\"]}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"title\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter title\",value:title,onChange:function onChange(e){return setTitle(e.target.value);},style:{borderLeft:'5px solid green'}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name \"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter your name\",value:name,onChange:function onChange(e){return setName(e.target.value);},style:{borderLeft:'5px solid green'}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"content\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Content \"}),/*#__PURE__*/_jsx(Form.Control,{placeholder:\"enter content\",as:\"textarea\",rows:5,value:content,onChange:function onChange(e){return setContent(e.target.value);},style:{borderLeft:'5px solid green'}})]}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",className:\"btn btn-block btn-success py-2\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-thumbs-up\"}),\" Create Post\"]})]})]})});};export default CreatePostScreen;","map":{"version":3,"sources":["/media/prathamesh/Pratham/Blog-App/frontend/src/screens/CreatePostScreen.jsx"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","createPost","Message","CreatePostScreen","history","name","setName","title","setTitle","content","setContent","message","setMessage","dispatch","postCreate","state","error","submitHandler","e","preventDefault","push","target","value","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { createPost } from '../redux/actions/post';\nimport Message from '../components/Message';\n\nconst CreatePostScreen = ({ history }) => {\n  // LOCAL STATES FOR INPUT\n\n  const [name, setName] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState();\n\n  // DISPATCH\n  const dispatch = useDispatch();\n\n  // CREATE POST REDUCER\n  const postCreate = useSelector((state) => state.postCreate);\n  const { error } = postCreate;\n\n  // SUBMIT HANDLER\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!name || !title || !content) {\n      setMessage('All fields are required');\n    } else {\n      // DISPATCH CREATE POST\n      dispatch(createPost(title, name, content));\n      // REDIRECT TO HOMEPAGE\n      history.push('/');\n    }\n  };\n\n  return (\n    <>\n      <FormContainer>\n        {message && <Message variant='warning'> {message}</Message>}\n        {error && <Message variant='danger'> {error}</Message>}\n\n        <h2 className='text-center text-warning my-2'>\n          <i className='fas fa-pencil-alt text-success'></i> New Post\n        </h2>\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='title'>\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='enter title'\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='name'>\n            <Form.Label>Name </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='enter your name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='content'>\n            <Form.Label>Content </Form.Label>\n            <Form.Control\n              placeholder='enter content'\n              as='textarea'\n              rows={5}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              style={{ borderLeft: '5px solid green' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' className='btn btn-block btn-success py-2'>\n            <i class='fas fa-thumbs-up'></i> Create Post\n          </Button>\n        </Form>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default CreatePostScreen;\n"]},"metadata":{},"sourceType":"module"}