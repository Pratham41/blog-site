{"ast":null,"code":"import axios from 'axios';\nimport { POST_LIST_FAIL, POST_LIST_REQUEST, POST_LIST_SUCCESS, POST_DETAILS_REQUEST, POST_DETAILS_SUCCESS, POST_DETAILS_FAIL, POST_CREATE_REQUEST, POST_CREATE_SUCCESS, POST_CREATE_FAIL, POST_CREATE_RESET } from '../constants/posts';\nexport const listPosts = () => async dispatch => {\n  try {\n    dispatch({\n      type: POST_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/posts');\n    dispatch({\n      type: POST_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_LIST_FAIL,\n      payload: error\n    });\n  }\n};\nexport const listPostDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: POST_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/posts/${id}`);\n    dispatch({\n      type: POST_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DETAILS_FAIL,\n      payload: error\n    });\n  }\n};\nexport const register = (title, name, content) => async dispatch => {\n  try {\n    dispatch({\n      type: POST_CREATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/posts', {\n      title,\n      name,\n      content\n    }, config);\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/media/prathamesh/Pratham/Blog-App/frontend/src/redux/actions/post.js"],"names":["axios","POST_LIST_FAIL","POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","listPosts","dispatch","type","data","get","payload","error","listPostDetails","id","register","title","name","content","config","headers","post","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,gBATF,EAUEC,iBAVF,QAWO,oBAXP;AAaA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,iCAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,iBAAR;AAA2Ba,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,cAAR;AAAwBe,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CAAW,mCAAkCI,EAAG,EAAhD,CAAvB;AAEAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,oBAAR;AAA8BW,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,iBAAR;AAA2BU,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,OAAd,KAA0B,MAAOX,QAAP,IAAoB;AACpE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIA,UAAMiB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAAC0B,IAAN,CACrB,iCADqB,EAErB;AAAEL,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KAFqB,EAGrBC,MAHqB,CAAvB;AAMAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,mBADC;AAEPQ,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,gBADC;AAEPO,MAAAA,OAAO,EAAEC,KAAK,CAACU;AAFR,KAAD,CAAR;AAID;AACF,CA5BM","sourcesContent":["import axios from 'axios';\nimport {\n  POST_LIST_FAIL,\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n  POST_DETAILS_REQUEST,\n  POST_DETAILS_SUCCESS,\n  POST_DETAILS_FAIL,\n  POST_CREATE_REQUEST,\n  POST_CREATE_SUCCESS,\n  POST_CREATE_FAIL,\n  POST_CREATE_RESET,\n} from '../constants/posts';\n\nexport const listPosts = () => async (dispatch) => {\n  try {\n    dispatch({ type: POST_LIST_REQUEST });\n\n    const { data } = await axios.get('http://localhost:5000/api/posts');\n\n    dispatch({ type: POST_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: POST_LIST_FAIL, payload: error });\n  }\n};\n\nexport const listPostDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: POST_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`http://localhost:5000/api/posts/${id}`);\n\n    dispatch({ type: POST_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: POST_DETAILS_FAIL, payload: error });\n  }\n};\n\nexport const register = (title, name, content) => async (dispatch) => {\n  try {\n    dispatch({\n      type: POST_CREATE_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:5000/api/posts',\n      { title, name, content },\n      config\n    );\n\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}