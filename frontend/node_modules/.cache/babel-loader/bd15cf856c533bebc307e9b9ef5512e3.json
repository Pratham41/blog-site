{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';// GETTING REDUCERS\nimport{postListReducer,postDetailsReducer,postCreateReducer,postReviewReducer}from'./redux/reducers/post';// COMBINING REDUCERS\nvar reducer=combineReducers({postList:postListReducer,postDetails:postDetailsReducer,postCreate:postCreateReducer,postReview:postReviewReducer});// MIDDLEWARE\nvar middleware=[thunk];// INITIAL_STATE\nvar initialState={};// CREATING STORE\nvar store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/media/prathamesh/Pratham/Blog-App/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","postListReducer","postDetailsReducer","postCreateReducer","postReviewReducer","reducer","postList","postDetails","postCreate","postReview","middleware","initialState","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA;AACA,OACEC,eADF,CAEEC,kBAFF,CAGEC,iBAHF,CAIEC,iBAJF,KAKO,uBALP,CAOA;AACA,GAAMC,CAAAA,OAAO,CAAGR,eAAe,CAAC,CAC9BS,QAAQ,CAAEL,eADoB,CAE9BM,WAAW,CAAEL,kBAFiB,CAG9BM,UAAU,CAAEL,iBAHkB,CAI9BM,UAAU,CAAEL,iBAJkB,CAAD,CAA/B,CAOA;AACA,GAAMM,CAAAA,UAAU,CAAG,CAACX,KAAD,CAAnB,CACA;AACA,GAAMY,CAAAA,YAAY,CAAG,EAArB,CACA;AACA,GAAMC,CAAAA,KAAK,CAAGhB,WAAW,CACvBS,OADuB,CAEvBM,YAFuB,CAGvBX,mBAAmB,CAACF,eAAe,MAAf,QAAmBY,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeE,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// GETTING REDUCERS\nimport {\n  postListReducer,\n  postDetailsReducer,\n  postCreateReducer,\n  postReviewReducer,\n} from './redux/reducers/post';\n\n// COMBINING REDUCERS\nconst reducer = combineReducers({\n  postList: postListReducer,\n  postDetails: postDetailsReducer,\n  postCreate: postCreateReducer,\n  postReview: postReviewReducer,\n});\n\n// MIDDLEWARE\nconst middleware = [thunk];\n// INITIAL_STATE\nconst initialState = {};\n// CREATING STORE\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}